#!/usr/bin/env coffee

Generator = require '../src/generator'
Server    = require '../src/server'
Fs        = require 'fs'
Path      = require 'path'

options =
  # port:       process.env.IMPACT_CRATER_PORT      or '9000'
  path:       process.env.IMPACT_CRATER_PATH      or '.'
  logging:    process.env.IMPACT_CRATER_LOG_LEVEL or 'info'
  type:       'example'
  # dashboard:  process.env.IMPACT_CRATER_DASHBOARD or false

usage = """

Run or generate impact-crater projects.

Usage: impact-crater <command>

Commands:
    generate - Create a game type from a template.

               Available Types:
               * minimal: Only setup the files needs to start the server.
               * example: Very simple game with movable character.

                 Usage: impact-crater generate <path> <type>
               Example: impact-crater generate games/crater-test example

       start - Start an impact-crater server.

               Usage: impact-crater start <path>


"""

yargs  = require('yargs').alias('l', 'logging')
                         .describe('logging', 'Set how verbose impact-crater should be.')
                         # .alias('d', 'dashboard')
                         # .describe('dashboard', 'Show the server dashboard')
                         # .alias('p', 'port')
                         # .describe('port', 'Set the port you want impact-crater running on.')


unless process.platform is "win32"
  process.on 'SIGTERM', ->
    process.exit 0

if yargs.logging
  options.logging = yargs.logging

# if yargs.argv.d
#   options.dashboard = true

# if yargs.port
#   options.port = yargs.port

switch yargs.argv._[0]
    when 'generate'
        options.path = yargs.argv._[1] or options.path
        options.type = yargs.argv._[2] or options.type
        generator = new Generator(options)
        generator.run()
    when 'start'
        serverPath = yargs.argv._[1] or options.path
        server = new Server(serverPath, options)
        server.run()
    else
        console.log "#{usage}#{yargs.help()}"
